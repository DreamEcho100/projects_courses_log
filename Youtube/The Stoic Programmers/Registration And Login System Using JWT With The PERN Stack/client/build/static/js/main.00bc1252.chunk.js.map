{"version":3,"sources":["Components/Login/Login.jsx","Components/Register/Register.jsx","Components/Dashboard/Dashboard.jsx","App.js","index.js"],"names":["Login","setAuth","useState","email","password","inputs","setInputs","onChange","event","target","name","value","onSubmitForm","a","preventDefault","body","fetch","method","headers","JSON","stringify","response","json","parseRes","token","localStorage","setItem","toast","success","error","console","message","className","onSubmit","type","e","class","to","Register","placeholder","Dashboard","setName","getProfile","parseData","user_name","logout","removeItem","useEffect","checkAuthenticated","log","onClick","configure","App","isAuthenticated","setIsAuthenticated","boolean","exact","path","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00bc1252.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\n\nconst Login = ({ setAuth }) => {\n\tconst [inputs, setInputs] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\n\tconst { email, password } = inputs;\n\n\tconst onChange = (event) =>\n\t\tsetInputs({ ...inputs, [event.target.name]: event.target.value });\n\n\tconst onSubmitForm = async (event) => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tconst body = { email, password };\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:5000/authentication/login',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(body),\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst parseRes = await response.json();\n\n\t\t\tif (parseRes.token) {\n\t\t\t\tlocalStorage.setItem('token', parseRes.token);\n\t\t\t\tsetAuth(true);\n\t\t\t\ttoast.success('Logged in Successfully.');\n\t\t\t} else {\n\t\t\t\tsetAuth(false);\n\t\t\t\ttoast.error(parseRes);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\ttoast.success('No Right Credential.');\n\t\t\tconsole.error(`Erorr, ${error}`, error.message);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className='mt-5 text-center'>Login</h1>\n\t\t\t<form onSubmit={onSubmitForm}>\n\t\t\t\t<input\n\t\t\t\t\ttype='email'\n\t\t\t\t\tname='email'\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\tclassName='form-control my-3'\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\tclassName='form-control my-3'\n\t\t\t\t/>\n\t\t\t\t<button class='btn btn-success btn-block'>Submit</button>\n\t\t\t</form>\n\t\t\t<Link to='/register'>register</Link>\n\t\t</Fragment>\n\t);\n};\n\nexport default Login;\n","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Register = ({ setAuth }) => {\n\tconst [inputs, setInputs] = useState({\n\t\tname: '',\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\n\tconst { name, email, password } = inputs;\n\n\tconst onChange = (event) =>\n\t\tsetInputs({ ...inputs, [event.target.name]: event.target.value });\n\n\tconst onSubmitForm = async (event) => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tconst body = { name, email, password };\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:5000/authentication/register',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(body),\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst parseRes = await response.json();\n\n\t\t\tif (parseRes.token) {\n\t\t\t\tlocalStorage.setItem('token', parseRes.token);\n\t\t\t\tsetAuth(true);\n\t\t\t\ttoast.success('Register Successfully.');\n\t\t\t} else {\n\t\t\t\tsetAuth(false);\n\t\t\t\ttoast.error(parseRes);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\ttoast.success('No Right Credential.');\n\t\t\tconsole.error(`Erorr, ${error}`, error.message);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className='mt-5 text-center'>Register</h1>\n\t\t\t<form onSubmit={onSubmitForm}>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='name'\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tplaceholder='name'\n\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\tclassName='form-control my-3'\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype='email'\n\t\t\t\t\tname='email'\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tplaceholder='email'\n\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\tclassName='form-control my-3'\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tplaceholder='password'\n\t\t\t\t\tonChange={(event) => onChange(event)}\n\t\t\t\t\tclassName='form-control my-3'\n\t\t\t\t/>\n\t\t\t\t<button className='btn btn-success btn-block'>Submit</button>\n\t\t\t</form>\n\t\t\t<Link to='/login'>Login</Link>\n\t\t</Fragment>\n\t);\n};\n\nexport default Register;\n","import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nconst Dashboard = ({ setAuth }) => {\n\tconst [name, setName] = useState('');\n\n\tconst getProfile = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch('http://localhost:5000/dashboard/', {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: { token: localStorage.token },\n\t\t\t});\n\n\t\t\tconst parseData = await response.json();\n\t\t\tsetName(parseData.user_name);\n\t\t} catch (error) {\n\t\t\tconsole.error(`Erorr, ${error}`, error.message);\n\t\t}\n\t};\n\n\tconst logout = async (event) => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tlocalStorage.removeItem('token');\n\t\t\tsetAuth(false);\n\t\t\ttoast.success('No Right Credential.');\n\t\t} catch (error) {\n\t\t\tconsole.error(`Erorr, ${error}`, error.message);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetProfile();\n\t}, []);\n\n\tconst checkAuthenticated = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:5000/authentication/is-verify',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: { token: localStorage.token },\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst parseRes = await response.json();\n\t\t\tconsole.log(parseRes);\n\t\t} catch (error) {\n\t\t\tlogout({ preventDefault: () => {} });\n\t\t\t// console.error(`Erorr, ${error}`, error.message);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tcheckAuthenticated();\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className='mt-5'>Dashboard</h1>\n\t\t\t<h2>Welcome {name}</h2>\n\t\t\t<button onClick={(event) => logout(event)} className='btn btn-primary'>\n\t\t\t\tLogout\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Dashboard;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tRedirect,\n} from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\n\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Login from './Components/Login/Login';\nimport Register from './Components/Register/Register';\nimport Dashboard from './Components/Dashboard/Dashboard';\n\ntoast.configure();\n\nfunction App() {\n\tconst [isAuthenticated, setIsAuthenticated] = useState(false);\n\n\tconst setAuth = (boolean) => {\n\t\tsetIsAuthenticated(boolean);\n\t};\n\n\tconst checkAuthenticated = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:5000/authentication/is-verify',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: { token: localStorage.token },\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst parseRes = await response.json();\n\t\t\tconsole.log(parseRes);\n\t\t} catch (error) {\n\t\t\tconsole.error(`Erorr, ${error}`, error.message);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tcheckAuthenticated();\n\t});\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Router>\n\t\t\t\t<section className='container'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\t\trender={(props) => <Dashboard {...props} setAuth={setAuth} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath='/login'\n\t\t\t\t\t\t\trender={(props) =>\n\t\t\t\t\t\t\t\t!isAuthenticated ? (\n\t\t\t\t\t\t\t\t\t<Login {...props} setAuth={setAuth} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Redirect to='/dashboard' />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath='/register'\n\t\t\t\t\t\t\trender={(props) =>\n\t\t\t\t\t\t\t\t!isAuthenticated ? (\n\t\t\t\t\t\t\t\t\t<Register {...props} setAuth={setAuth} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Redirect to='/login' />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath='/dashboard'\n\t\t\t\t\t\t\trender={(props) =>\n\t\t\t\t\t\t\t\tisAuthenticated ? (\n\t\t\t\t\t\t\t\t\t<Dashboard {...props} setAuth={setAuth} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Redirect to='/login' />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</section>\n\t\t\t</Router>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './global-styles.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}