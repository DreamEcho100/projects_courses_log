{"version":3,"sources":["Components/ErrorBoundry/ErrorBoundry.jsx","Components/SearchBox/SearchBox.jsx","Components/Scroll/Scroll.jsx","Components/CardsList/Card/Card.jsx","Components/CardsList/CardsList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ErrorBoundry","props","state","hasError","error","info","console","log","this","setState","style","display","flexDirection","alignItems","justifyContent","width","height","textAlign","background","color","children","Component","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","overflowY","border","margin","Card","name","username","email","id","src","alt","CardList","robots","map","robot","index","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","CardsList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA4CeA,G,6DAzCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,QAAQC,IAAI,QAASH,GACrBE,QAAQC,IAAI,OAAQF,GACpBG,KAAKC,SAAS,CAAEN,UAAU,M,+BAK1B,GAAIK,KAAKN,MAAMC,SAAU,CAYvB,OACE,sBACEO,MAbW,CACbC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,MAAO,OACPC,OAAQ,OACRC,UAAW,SACXC,WAAY,QACZC,MAAO,QAGP,UAGE,uCACA,4DAKN,OAAOX,KAAKP,MAAMmB,a,GAtCKC,cCaZC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCEHK,EATA,SAAC5B,GAEd,OACE,qBAAKS,MAAO,CAAEoB,UAAW,SAAUC,OAAQ,kBAAmBf,OAAQ,QAASgB,OAAQ,UAAvF,SACI/B,EAAMmB,YCaCa,EAhBF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACrC,OACE,sBACEZ,UAAU,0BACVf,MAAO,CAAEQ,WAAY,mBAFvB,UAIE,qBAAKoB,IAAG,+BAA0BD,EAA1B,qBAAiDE,IAAI,KAC7D,gCACE,6BAAKL,IACL,6BAAKC,IACL,4BAAIC,WCSGI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGlB,OACE,qBAAKhB,UAAU,KAAf,SACGgB,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACV,cAAC,EAAD,CAEEP,GAAIM,EAAMN,GACVH,KAAMS,EAAMT,KACZE,MAAOO,EAAMP,MACbD,SAAUQ,EAAMR,UAJXS,SC4CAC,E,kDA7Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKtC,SAAS,CAAEuC,YAAaD,EAAME,OAAOC,SAb1C,EAAKhD,MAAQ,CACXuC,OAAQ,GACRO,YAAa,IAJH,E,gEAQO,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAK9C,SAAS,CAAEgC,OAAQc,S,+BAOnC,IAAD,EACyB/C,KAAKN,MAA7BuC,EADD,EACCA,OAAQO,EADT,EACSA,YAEVQ,EAAiBf,EAAOgB,QAAO,SAACd,GACpC,OACEA,EAAMT,KAAKwB,cAAcC,SAASX,EAAYU,gBAC9Cf,EAAMR,SAASuB,cAAcC,SAASX,EAAYU,gBAClDf,EAAMP,MAAMsB,cAAcC,SAASX,EAAYU,kBAInD,OAAQjB,EAAOmB,OAGb,eAAC,WAAD,WACE,oBAAInC,UAAU,KAAd,6BACA,cAAC,EAAD,CAAWD,aAAchB,KAAKsC,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAACe,EAAD,CAAWpB,OAAQe,WAPzB,gD,GA/BYnC,aCGHyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.06994584.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    console.log(\"error\", error);\n    console.log(\"info\", info);\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    \n    if (this.state.hasError) {\n      const styles = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        textAlign: \"center\",\n        background: \"black\",\n        color: \"gray\"\n       };\n      return (\n        <div \n          style={ styles }\n        >\n          <h1>Ooops</h1>\n          <h1> Somthing went wrong :/</h1>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n  \n  return (\n    <div style={{ overflowY: \"scroll\", border: \"5px solid black\", height: \"80rem\", margin: \"0 1rem\" }}>\n      { props.children }\n    </div>\n  );\n}\n\nexport default Scroll;","import React from \"react\";\nimport \"tachyons\";\n\nconst Card = ({ name, username, email, id }) => {\n  return (\n    <div\n      className=\"tc dib br3 pa3 ma2 grow\"\n      style={{ background: \" rgb(48, 83, 3)\" }}\n    >\n      <img src={`https://robohash.org/${id}?set=set2&180x180`} alt=\"\" />\n      <div>\n        <h2>{name}</h2>\n        <h4>{username}</h4>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"tachyons\";\nimport Card from \"./Card/Card.jsx\";\n\nconst CardList = ({ robots }) => {\n  // return [ robots.map((robot, index) => <Card key={index} id={robot.id} name={robot.name} email={robot.email} username={robot.username}/>) ];\n\n  return (\n    <div className=\"tc\">\n      {robots.map((robot, index) => (\n        <Card\n          key={index}\n          id={robot.id}\n          name={robot.name}\n          email={robot.email}\n          username={robot.username}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React, { Component, Fragment } from \"react\";\nimport \"tachyons\";\nimport \"./App.css\";\nimport ErrorBoundry from \"./Components/ErrorBoundry/ErrorBoundry.jsx\";\nimport SearchBox from \"./Components/SearchBox/SearchBox.jsx\";\nimport Scroll from \"./Components/Scroll/Scroll.jsx\";\nimport CardsList from \"./Components/CardsList/CardsList.jsx\";\n// import { robots } from \"./robots\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { robots, searchField } = this.state;\n\n    const filteredRobots = robots.filter((robot) => {\n      return (\n        robot.name.toLowerCase().includes(searchField.toLowerCase()) ||\n        robot.username.toLowerCase().includes(searchField.toLowerCase()) ||\n        robot.email.toLowerCase().includes(searchField.toLowerCase())\n      );\n    });\n\n    return !robots.length ? (\n      <h1>Loading...</h1>\n    ) : (\n      <Fragment>\n        <h1 className=\"f1\">MonstersRolodex</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardsList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import { registerServiceWorker } from '../registerServiceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// registerServiceWorker();\n"],"sourceRoot":""}