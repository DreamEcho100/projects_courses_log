{"version":3,"sources":["v3 - Functions Componenet & Redux/Main.js","v3 - Functions Componenet & Redux/constants.js","Components/ErrorBoundry/ErrorBoundry.js","Components/SearchBox/SearchBox.js","Components/Scroll/Scroll.js","Components/CardsList/Card/Card.js","Components/CardsList/CardsList.js","v3 - Functions Componenet & Redux/actions.js","v3 - Functions Componenet & Redux/reducers.js","v3 - Functions Componenet & Redux/App.js","reportWebVitals.js","index.js"],"names":["filteredRobots","CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","ErrorBoundry","props","state","hasError","error","info","console","log","this","setState","style","display","flexDirection","alignItems","justifyContent","width","height","textAlign","background","color","children","Component","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","overflowY","border","margin","Card","name","email","id","src","alt","CardList","robots","map","robot","index","username","connect","searchField","searchRobots","isPending","requestRobots","dispatch","onSearchChange","event","text","target","value","onRequestRobots","fetch","then","response","json","data","payload","catch","useEffect","filter","toLowerCase","includes","CardsList","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";gKAWIA,E,4DCXSC,EAAqB,qBAErBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAwB,wB,uCCwCtBC,E,kDAzCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,QAAQC,IAAI,QAASH,GACrBE,QAAQC,IAAI,OAAQF,GACpBG,KAAKC,SAAS,CAAEN,UAAU,M,+BAK1B,GAAIK,KAAKN,MAAMC,SAAU,CAYvB,OACE,sBACEO,MAbW,CACbC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,MAAO,OACPC,OAAQ,OACRC,UAAW,SACXC,WAAY,QACZC,MAAO,QAGP,UAGE,uCACA,4DAKN,OAAOX,KAAKP,MAAMmB,a,GAtCKC,aCaZC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCEHK,EATA,SAAC5B,GAEd,OACE,qBAAKS,MAAO,CAAEoB,UAAW,SAAUC,OAAQ,kBAAmBf,OAAQ,QAASgB,OAAQ,UAAvF,SACI/B,EAAMmB,YCUCa,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE3B,OACE,sBAAKX,UAAU,yCAAf,UACE,qBAAKY,IAAG,+BAA4BD,EAA5B,YAA4CE,IAAI,KACxD,gCACA,6BAAMJ,IACN,4BAAKC,WCKII,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIlB,OACE,qBAAKf,UAAU,KAAf,SACIe,EAAOC,KAAI,SAACC,EAAOC,GAAR,OAAkB,cAAC,EAAD,CAAkBP,GAAIM,EAAMN,GAAIF,KAAMQ,EAAMR,KAAMC,MAAOO,EAAMP,MAAOS,SAAUF,EAAME,UAA3ED,SNuEjCE,eApES,SAAA3C,GAEvB,MAAO,CACN4C,YAAa5C,EAAM6C,aAAaD,YAChCE,UAAW9C,EAAM+C,cAAcD,UAC/BR,OAAQtC,EAAM+C,cAAcT,OAC5BpC,MAAOF,EAAM+C,cAAc7C,UAIF,SAAA8C,GAE1B,MAAO,CACNC,eAAgB,SAAAC,GAAK,OAAIF,GOZIG,EPYoBD,EAAME,OAAOC,MOZvB,CACxC7B,KAAM9B,EACN,QAAWyD,KAFkB,IAACA,GPa7BG,gBAAiB,kBAAMN,GORU,SAACA,GACnCA,EAAS,CAAExB,KAAM7B,IACjB4D,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIX,EAAS,CAAExB,KAAM5B,EAAwBgE,QAASD,OAC/DE,OAAM,SAAA3D,GAAK,OAAI8C,EAAS,CAAExB,KAAM3B,EAAuB+D,QAAS1D,cPyDpDyC,EAlDF,SAAC5C,GAAU,IAItB6C,EAEG7C,EAFH6C,YAAaK,EAEVlD,EAFUkD,eACbX,EACGvC,EADHuC,OAAQgB,EACLvD,EADKuD,gBAAiBR,EACtB/C,EADsB+C,UAAW5C,EACjCH,EADiCG,MA0BrC,OAvBA4D,qBAAU,WACTR,MAME,IAMCR,GAAuB,KAAV5C,IAChBT,EAAiB6C,EAAOyB,QAAO,SAAAvB,GAC9B,OACCA,EAAMR,KAAKgC,cAAcC,SAASrB,EAAYoB,gBAE9CxB,EAAMP,MAAM+B,cAAcC,SAASrB,EAAYoB,mBAK3ClB,EACL,4CAEAA,GAAuB,KAAV5C,EAIZ,eAAC,WAAD,WACC,oBAAIqB,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAc2B,IACzB,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAACiB,EAAD,CAAW5B,OAAS7C,WARxB,mF,8BQ3DG0E,EAAqB,CAC1BvB,YAAa,IAeRwB,EAAqB,CAC1BtB,WAAW,EACXR,OAAQ,GACRpC,MAAO,IChBFmE,EAASC,yBACTC,EAAcC,YAAgB,CAAC3B,aDAT,WAA0C,IAAzC7C,EAAwC,uDAAlCmE,EAAoBM,EAAc,uDAAP,GAG7D,OACC,eACE/E,EAAqBgF,OAAOC,OAAO,GAAI3E,EAAO,CAAE4C,YAAa6B,EAAOb,WACpEa,EAAOjD,OAETxB,GCRiD+C,cDkBtB,WAA0C,IAAD,EAAxC/C,EAAwC,uDAAlCoE,EAAoBK,EAAc,uDAAP,GAC9D,OACC,mBACE9E,EAAyB+E,OAAOC,OAAO,GAAI3E,EAAO,CAAE8C,WAAW,EAAM5C,MAAO,MAD9E,cAEEN,EAAyB8E,OAAOC,OAAO,GAAI3E,EAAO,CAAE8C,WAAW,EAAOR,OAAQmC,EAAOb,QAAS1D,MAAO,MAFvG,cAGEL,EAAwB6E,OAAOC,OAAO,GAAI3E,EAAO,CAAE8C,WAAW,EAAOR,OAAQ,GAAIpC,MAAOuE,EAAOb,WAHjG,GAIEa,EAAOjD,OAETxB,KCzBI4E,EAAQC,YAAYN,EAAaO,YAAgBC,IAAiBV,IAQzDW,EANH,kBACX,cAAC,IAAD,CAAUJ,MAAQA,EAAlB,SACC,cAAC,EAAD,OCJaK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9d4d48c5.chunk.js","sourcesContent":["import React, { /*useState, */useEffect, Fragment } from \"react\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from './actions';\r\n\r\nimport \"tachyons\";\r\nimport ErrorBoundry from \"../Components/ErrorBoundry/ErrorBoundry\";\r\nimport SearchBox from '../Components/SearchBox/SearchBox';\r\nimport Scroll from \"../Components/Scroll/Scroll\";\r\nimport CardsList from '../Components/CardsList/CardsList';\r\n\r\nlet filteredRobots;\r\n\r\nconst mapStateToProps = state => {\r\n\t// Listining to this part of this state\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField, // state.searchField\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\t// Interested in these actions\r\n\treturn {\r\n\t\tonSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots())\r\n\t}\r\n}\r\n\r\nconst Main = (props) => {\r\n\t// const [ robots, setRobots ] = useState([]);\r\n\t// const [ searchField, setSearchField ] = useState(\"\");\r\n\tconst {\r\n\t\tsearchField, onSearchChange ,\r\n\t\trobots, onRequestRobots, isPending, error\r\n\t} = props;\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequestRobots();\r\n\t\t// fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t// \t.then(response => response.json())\r\n\t\t// \t.then(users => setRobots(users));\r\n\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\t// const onSearchChange = (event) => {\r\n\t// \tsetSearchField(event.target.value);\r\n\t// }\r\n\r\n\tif(!isPending && error === '') {\r\n\t\tfilteredRobots = robots.filter(robot => {\r\n\t\t\treturn (\r\n\t\t\t\trobot.name.toLowerCase().includes(searchField.toLowerCase()) ||\r\n\t\t\t\t// robot.username.toLowerCase().includes(searchField.toLowerCase()) ||\r\n\t\t\t\trobot.email.toLowerCase().includes(searchField.toLowerCase())\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\treturn isPending/*!robots.length*/ ?\r\n\t\t\t<h1>Loading...</h1>\r\n\t\t:\r\n\t\t!isPending && error !== '' ?\r\n\t\t\t<h1>Error in the network or in fetching the API :(</h1>\r\n\t\t:\r\n\t\t\t(\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardsList robots={ filteredRobots } />\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</Fragment>\r\n\t\t\t);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    console.log(\"error\", error);\r\n    console.log(\"info\", info);\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    \r\n    if (this.state.hasError) {\r\n      const styles = {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        textAlign: \"center\",\r\n        background: \"black\",\r\n        color: \"gray\"\r\n       };\r\n      return (\r\n        <div \r\n          style={ styles }\r\n        >\r\n          <h1>Ooops</h1>\r\n          <h1> Somthing went wrong :/</h1>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  \r\n  return (\r\n    <div style={{ overflowY: \"scroll\", border: \"5px solid black\", height: \"80rem\", margin: \"0 1rem\" }}>\r\n      { props.children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\nimport \"tachyons\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  \r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow\">\r\n      <img src={ `https://robohash.org/${ id }?200x200` } alt=\"\"/>\r\n      <div>\r\n      <h2>{ name }</h2>\r\n      <p>{ email }</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"tachyons\";\r\nimport Card from \"./Card/Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  \r\n  // return [ robots.map((robot, index) => <Card key={index} id={robot.id} name={robot.name} email={robot.email} username={robot.username}/>) ];\r\n  \r\n  return (\r\n    <div className=\"tc\">\r\n      { robots.map((robot, index) => <Card key={index} id={robot.id} name={robot.name} email={robot.email} username={robot.username}/>) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import { \r\n\tCHANGE_SEARCHFIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants.js';\r\n\r\n// export const setSearchField = (text) => {\r\n// \t// console.log(`setSearchField, text = ${text}`);\r\n// \treturn {\r\n// \t\ttype: CHANGE_SEARCHFIELD,\r\n// \t\tpayload: text\r\n// \t}\r\n// }\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCHFIELD,\r\n\t\"payload\": text\r\n});\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n\t\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\r\n};","import { \r\n\tCHANGE_SEARCHFIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n\t// console.log(`searchRobots, state= ${state} - action= ${action} `);\r\n\t// console.table(state);\r\n\treturn (\r\n\t\t{\r\n\t\t\t[CHANGE_SEARCHFIELD]: Object.assign({}, state, { searchField: action.payload }), // { ...state, searchField: action.payload}\r\n\t\t}[action.type]\r\n\t\t||\r\n\t\tstate\r\n\t);\r\n}\r\n\r\nconst initialStateRobots = {\r\n\tisPending: false,\r\n\trobots: [],\r\n\terror: ''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n\treturn (\r\n\t\t{\r\n\t\t\t[REQUEST_ROBOTS_PENDING]: Object.assign({}, state, { isPending: true, error: '' }),\r\n\t\t\t[REQUEST_ROBOTS_SUCCESS]: Object.assign({}, state, { isPending: false, robots: action.payload, error: '' }),\r\n\t\t\t[REQUEST_ROBOTS_FAILED]: Object.assign({}, state, { isPending: false, robots: [], error: action.payload})\r\n\t\t}[action.type]\r\n\t\t||\r\n\t\tstate\r\n\t)\r\n}","import React from \"react\";\nimport \"../App.css\";\nimport Main from \"./Main\";\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport { searchRobots, requestRobots } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nconst App = () => (\n\t<Provider store={ store }>\n\t\t<Main />\n\t</Provider>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './v3 - Functions Componenet & Redux/App';\nimport reportWebVitals from './reportWebVitals';\n// import { registerServiceWorker } from '../registerServiceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// registerServiceWorker();"],"sourceRoot":""}